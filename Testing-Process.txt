
#############################################
######### Kafka Setup and Process ###########
#############################################

        Directory kafka setup - cd C:\kafka_2.13-3.8.0\bin\windows
        Start Zookeeper:
        zookeeper-server-start.bat ..\..\config\zookeeper.properties

        Start kafka-server:
        kafka-server-start.bat ..\..\config\server.properties


        Topic creation:
        kafka-topics.bat --create --topic raw-events --bootstrap-server localhost:9092 --replication-factor 1 --partitions 3

        kafka-topics.bat --create --topic processed-events --bootstrap-server localhost:9092 --replication-factor 1 --partitions 3

        Start raw-events Producer :
        kafka-console-producer.bat --broker-list localhost:9092 --topic raw-events

        Start raw-events Consumer :
        kafka-console-consumer.bat --bootstrap-server localhost:9092 --topic raw-events --from-beginning

        Start processed-events Producer :
        kafka-console-producer.bat --broker-list localhost:9092 --topic processed-events

        Start processed-events Consumer :
        kafka-console-consumer.bat --bootstrap-server localhost:9092 --topic processed-events --from-beginning

        # Get All Topics in Kafka
        kafka-topics.bat --list --bootstrap-server localhost:9092

        # Get All Consumer Groups in Kafka
        kafka-consumer-groups.bat --list --bootstrap-server localhost:9092



#############################################
###### Elastic Search Setup and Process #####
#############################################

        Elastic search Installation Directory -  cd C:\elastic-stack\elasticsearch-8.17.0
        Unset or Correct JAVA_HOME:
            set JAVA_HOME=
            set JAVA_HOME=C:\elastic-stack\elasticsearch-8.17.0\jdk

        Disable security feature - xpack.security.enabled: false

                                   xpack.security.enrollment.enabled: false

                                   # Enable encryption for HTTP API client connections, such as Kibana, Logstash, and Agents
                                   xpack.security.http.ssl:
                                     enabled: false
                                     keystore.path: certs/http.p12

                                   # Enable encryption and mutual authentication between cluster nodes
                                   xpack.security.transport.ssl:
                                     enabled: false
                                     verification_mode: certificate
                                     keystore.path: certs/transport.p12
                                     truststore.path: certs/transport.p12
                                   # Create a new cluster with the current node only
                                   # Additional nodes can still join the cluster later
                                   cluster.initial_master_nodes: ["HMECL-CD2403THV"]

        Cred:
            username - elastic
            password - Z9Ei3Etp-LYD4Ll*IsGs
            HTTP CA certificate SHA-256 fingerprint: f0f0da6d4f1da1d1d4e33bbae76cf34a742de917df2ff618a03f6b5e8a89f4ed
            enrollment token -eyJ2ZXIiOiI4LjE0LjAiLCJhZHIiOlsiMTkyLjE2OC4xLjk6OTIwMCJdLCJmZ3IiOiJmMGYwZGE2ZDRmMWRhMWQxZDRlMzNiYmFlNzZjZjM0YTc0MmRlOTE3ZGYyZmY2MThhMDNmNmI1ZThhODlmNGVkIiwia2V5IjoiZGpibjNaTUJUOG1FUTFkLVNaZlI6UVZDeEpiNzRSemlYbEQ4Tkh6OEFnZyJ9
            new enrollment token - eyJ2ZXIiOiI4LjE0LjAiLCJhZHIiOlsiMTkyLjE2OC4xLjk6OTIwMCJdLCJmZ3IiOiJmMGYwZGE2ZDRmMWRhMWQxZDRlMzNiYmFlNzZjZjM0YTc0MmRlOTE3ZGYyZmY2MThhMDNmNmI1ZThhODlmNGVkIiwia2V5IjoiUVNjNjM1TUJSVXRUODdqeTQtdjM6c1dCbE9GSFBRUXFVRFVxUW5pdElQZyJ9
            Note - Configure other nodes to join this cluster:
                   On this node:
                     Create an enrollment token with `bin/elasticsearch-create-enrollment-token -s node`.
                     Uncomment the transport.host setting at the end of config/elasticsearch.yml.
                     Restart Elasticsearch.
                   On other nodes:
                     Start Elasticsearch with `bin/elasticsearch --enrollment-token <token>`, using the enrollment token that you generated.

        Start server:
            Goto directory "C:\elastic-stack\elasticsearch-8.17.0\bin" and run "elasticsearch.bat"

        Generate New Token :
            Goto directory "C:\elastic-stack\elasticsearch-8.17.0\bin" run  "elasticsearch-create-enrollment-token -s kibana"

        Lists all indices in Elasticsearch:
            curl -X GET "http://localhost:9200/_cat/indices?v"

        Return all documents in the index:
            curl -X GET "http://localhost:9200/processed-events-index/_search?pretty"

        For Connectivity issue between ElasticSearch and kibana:###########################

#############################################
########## Kibana Setup and Process #########
#############################################

        Kibana Installation Directory -

        disabling this setting - "--openssl-legacy-provider" in the node.options from directory "C:\elastic-stack\kibana-8.17.0\config"

        Goto directory "C:\elastic-stack\kibana-8.17.0\bin" and run "kibana.bat"

        Elasticsearch and Kibana Communication Health check If SSL is disabled:
                - curl -X GET http://localhost:9200/_cluster/health
        Elasticsearch and Kibana Communication Health check If SSL is enabled:
                - curl -X GET --cacert /path/to/http_ca.crt https://localhost:9200/_cluster/health

        Login Cred -
        url - http://localhost:5601/?code=489966
        username - elastic
        password - Z9Ei3Etp-LYD4Ll*IsGs
        HTTP CA certificate SHA-256 fingerprint: f0f0da6d4f1da1d1d4e33bbae76cf34a742de917df2ff618a03f6b5e8a89f4ed
        enrollment token -eyJ2ZXIiOiI4LjE0LjAiLCJhZHIiOlsiMTkyLjE2OC4xLjk6OTIwMCJdLCJmZ3IiOiJmMGYwZGE2ZDRmMWRhMWQxZDRlMzNiYmFlNzZjZjM0YTc0MmRlOTE3ZGYyZmY2MThhMDNmNmI1ZThhODlmNGVkIiwia2V5IjoiZGpibjNaTUJUOG1FUTFkLVNaZlI6UVZDeEpiNzRSemlYbEQ4Tkh6OEFnZyJ9


#############################################
########## Logstash Setup and Process #########
#############################################
        Install Directory - cd C:\elastic-stack\logstash-8.17.0\bin

        Create file "C:\logstash\config\kafka-to-elasticsearch.conf" in the config directory
        File Content:
                    input {
                        kafka {
                          bootstrap_servers => "localhost:9092" # Replace with your Kafka broker address
                          topics => ["processed-events"]        # Replace with your Kafka topic
                      #    group_id => "logstash-group"         # Optional: consumer group ID
                          codec => "json"                       # Specify the codec if data is in JSON format
                        }
                      }

                      filter {
                        # Optional: Add any data transformation or filtering logic here
                        # Example:
                        # mutate {
                        #   rename => { "field1" => "new_field1" }
                        # }
                      }

            with non ssl:
                      output {
                        elasticsearch {
                          hosts => ["http://localhost:9200"]    # Replace with your Elasticsearch URL
                          index => "processed-events-index"     # Replace with your desired index name
                      #    document_id => "%{id}"               # Optional: Use a unique field as document ID
                      	document_id => "%{[eventId]}"         # Unique ID for deduplication
                        }

                        # Optional: Debugging output
                        stdout {
                          codec => rubydebug
                        }
                      }

             with  ssl:
                      output {
                        elasticsearch {
                          hosts => ["https://localhost:9200"]
                          user => "elastic"
                          password => "Z9Ei3Etp-LYD4Ll*IsGs"
                          ssl => true
                          cacert => "C:/elastic-stack/elasticsearch-8.17.0/config/certs/http_ca.crt" # Path to the CA certificate
                      	index => "processed-events-index"     # Replace with your desired index name
                      	document_id => "%{[eventId]}"         # Unique ID for deduplication (adjust field if needed)
                        }

                        stdout {
                          codec => rubydebug                        # Optional: Debug output to console
                        }
                      }

        Start server:
        logstash -f C:\elastic-stack\logstash-8.17.0\config\kafka-to-elasticsearch.conf

#############################################
########## Reference #########
#############################################
        kafka connect - https://risingwave.com/blog/how-to-send-data-from-kafka-to-elasticsearch-a-step-by-step-guide/
        Kafka,logstash,elasticsearch, kibana - https://www.youtube.com/watch?v=IFfULE1VxE0

        Kafka,logstash,elasticsearch, kibana - https://selftuts.in/what-is-elk-stack/

#############################################
########## Ports #########
#############################################

        Kafka-Manager - http://localhost:9000
        kafka - http://localhost:9092
        Zookeeper - http://localhost:2181
        ElasticSearch - http://localhost:9200
        Kibana - http://localhost:5601
        logstash - http://localhost:9600

#############################################
########## Testing Steps #########
#############################################
        1. Send message from raw-events Producer
           json -  {"eventId":"1","eventType":"click","timestamp":"2024-12-12T10:00:00Z","userId":"user1"}
        2. kafka stream consumes it and processes and send it to processed-events consumer
        3. Automatically picked by logstash from mentioned topic "processed-events"
        4. Send it to the ElasticSearch